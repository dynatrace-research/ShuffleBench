// gradle shadowjar -Dorg.gradle.java.home=/usr/lib/jvm/java-17-openjdk-amd64
plugins {
    id 'java'
    id "application"
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'com.google.cloud.tools.jib' version '3.3.1'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
    withJavadocJar()
    withSourcesJar()
}

group 'com.dynatrace'
version '1.0-SNAPSHOT'

application {
    mainClassName = "com.dynatrace.research.shufflebench.SparkStructuredStreamingShuffle"
}

ext {
    sparkVersion = '3.4.1'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':commons')

    // Spark dependencies
    implementation "org.apache.spark:spark-core_2.12:${sparkVersion}"
    implementation "org.apache.spark:spark-sql_2.12:${sparkVersion}"
    implementation "org.apache.spark:spark-streaming_2.12:${sparkVersion}"
    implementation "org.apache.spark:spark-sql-kafka-0-10_2.12:${sparkVersion}"

    // Kafka dependencies
    implementation 'org.apache.kafka:kafka-clients:3.5.0'
    // Other dependencies
    implementation 'com.typesafe:config:1.4.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.3'

    implementation 'org.apache.logging.log4j:log4j-api:2.19.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.19.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.19.0'
    implementation 'io.smallrye.config:smallrye-config:3.2.1'
    implementation 'com.dynatrace.hash4j:hash4j:0.9.0'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.9.1'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.9.1'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.23.1'
}
tasks.register("allJar", com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    manifest {
        attributes "Main-Class": "shadow_test.Main"
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.SF'
    }

    from sourceSets.main.output
    configurations = [project.configurations.runtimeClasspath]

    zip64 true

    mergeServiceFiles()

    with jar
}
test {
    useJUnitPlatform()
}
shadowJar {
    classifier = null
    version = version
    zip64 = true
    mergeServiceFiles()

    // relocate pravega client's dependencies to minimize conflicts
    relocate "org.apache.commons", "io.pravega.shaded.org.apache.commons"
    relocate "com.google", "io.pravega.shaded.com.google"
    relocate "io.grpc", "io.pravega.shaded.io.grpc"
    relocate "com.squareup.okhttp", "io.pravega.shaded.com.squareup.okhttp"
    relocate "okio", "io.pravega.shaded.okio"
    relocate "io.opencensus", "io.pravega.shaded.io.opencensus"
    relocate "io.netty", "io.pravega.shaded.io.netty"
    relocate "com.fasterxml.jackson", "io.pravega.shaded.com.fasterxml.jackson"
    relocate 'META-INF/native/libnetty', 'META-INF/native/libio_pravega_shaded_netty'
    relocate 'META-INF/native/netty', 'META-INF/native/io_pravega_shaded_netty'
}
