kafkaClient:
  nodeSelector:
    type: infra

kcat:
  nodeSelector:
    type: infra

strimzi-kafka-operator:
  nodeSelector:
    type: infra

strimzi:
  kafka:
    storage:
      type: persistent-claim
      size: 1000Gi
      class: kafka
      deleteClaim: true
    template:
      pod:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: type
                  operator: In
                  values:
                  - kafka
  zookeeper:
    template:
      pod:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: type
                  operator: In
                  values:
                  - infra
  topicOperator:
    template:
      pod:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: type
                  operator: In
                  values:
                  - infra
  kafkaExporter:
    template:
      pod:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: type
                  operator: In
                  values:
                  - infra

kube-prometheus-stack:
  prometheusOperator:
    nodeSelector:
      type: infra
  grafana:
    nodeSelector:
      type: infra
  prometheus:
    monitor:
      enabled: true
      relabelings:
        - sourceLabels: [ __meta_kubernetes_endpoint_node_name ]
          targetLabel: node
    prometheusSpec:
      nodeSelector:
        type: infra

prometheus:
  nodeSelector:
    type: infra

operator:
  nodeSelector:
    type: infra
  resultsVolume:
    persistent:
      enabled: true
